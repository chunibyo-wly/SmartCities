{"version":3,"sources":["components/Header/index.js","components/Video/index.js","components/SubTitle/index.js","components/Map/index.js","components/Chart/CountNumber.js","components/Chart/VehicleLineBar.js","components/Chart/FunnelSummary.js","components/Chart/CountNumberCalendar.js","components/Chart/LineSummary.js","components/Card/info.js","components/Card/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","height","Component","Video","state","image","align","justify","span","src","alt","width","SubTitle","className","this","props","titleName","React","MapScene","title","scrolling","border","margin","CountNumber","data","name","value","pedestrianAmount","child","itemStyle","color","teenager","adult","oldPeople","sort","a","b","label","option","backgroundColor","legend","orient","right","icon","textStyle","polar","angleAxis","show","min","max","clockwise","radiusAxis","type","axisLabel","interval","fontSize","formatter","fontFamily","axisLine","axisTick","alignWithLabel","splitLine","map","item","series","coordinateSystem","zlevel","roundCap","maxValue","barGap","VehicleLineBar","grid","top","left","bottom","yAxis","xAxis","showBackground","backgroundStyle","barCategoryGap","emphasis","barBorderRadius","normal","echarts","LinearGradient","offset","FunnelSummary","minSize","maxSize","gap","position","borderWidth","opacity","tooltip","CountNumberCalendar","gird","calendar","range","lineStyle","borderColor","dayLabel","monthLabel","yearLabel","year","date","parseDate","end","time","push","formatTime","Math","floor","random","getVirtulData","symbolSize","val","LineSummary","xAxisData","value1","value2","v","yAxisData1","pedestrianAmountList","hexToRgba","hex","rgbaColor","test","parseInt","slice","boundaryGap","nameTextStyle","lineHeight","smooth","shadowBlur","shadowColor","shadowOffsetY","console","log","Info","k","PersonCard","fourBlockRow","pedestrianAttribute","img","size","UserOutlined","display","verticalAlign","padding","App","personList","vehicleAmount","trunk","bus","motorcycle","car","bicycle","vehicleAmountList","setInterval","getBoxData","resultList","key","cnt","i","length","resultMap","sum","_list","_item","shift","fetch","method","redirect","then","response","text","result","JSON","parse","undefined","setState","countNumber","tempList","pushNumber","sumNumber","catch","error","lineWidth","dotsNumber","dotsDistance","hoverEffect","marginTop","Map","person","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6f609a8d.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport Decoration from \"@jiaminghi/data-view-react/es/decoration5\";\n\nclass Header extends Component {\n    render() {\n        const style = {\n            height: 100,\n        }\n        return (\n            <Decoration style={style}/>\n        )\n    }\n\n}\n\nexport default Header","import React, {Component} from \"react\";\nimport {Col, Row} from \"antd\";\nimport {BorderBox9} from \"@jiaminghi/data-view-react\";\n\nclass Video extends Component {\n    state = {\n        image: \"\"\n    }\n\n    render() {\n        return (\n            <Row align={'middle'} justify={'center'}>\n                <Col span={22}>\n                    {/*<BorderBox9>*/}\n                        <img src=\"http://shield:5000/video_feed\" alt=\"\"\n                             style={{\n                                 width: \"100%\",\n                                 height: \"auto\",\n                             }}/>\n                    {/*</BorderBox9>*/}\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default Video","import React from \"react\";\nimport \"./index.css\"\n\nclass SubTitle extends React.Component {\n    titleName;\n\n    render() {\n        return (\n            <div className={\"subtitle\"}>\n                {this.props.titleName}\n            </div>\n        )\n    }\n}\n\nexport default SubTitle\n\n","import React from \"react\";\nimport SubTitle from \"../SubTitle\";\n\nfunction MapScene() {\n\n\n    return (\n        <div>\n            {/*<SubTitle titleName={\"实时地图\"}/>*/}\n            <iframe title={\"定位\"} src={\"/Map.html\"} scrolling={'no'}\n                    style={{\n                        border: 0,\n                        width: 440,\n                        height: 200,\n                        margin: 10\n                    }}\n            />\n        </div>\n    )\n}\n\nexport default MapScene\n\n","import * as React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport SubTitle from \"../SubTitle\";\n\nclass CountNumber extends React.Component {\n\n    render() {\n\n        const maxValue = 20;\n\n        const data = [\n            {\n                name: \"A\",\n                value: this.props.pedestrianAmount.child,\n                itemStyle: {\n                    color: 'rgb(239, 139, 52)'\n                }\n            },\n            {\n                name: \"B\",\n                value: this.props.pedestrianAmount.teenager,\n                itemStyle: {\n                    color: 'rgb(246, 197, 69)'\n                }\n            },\n            {\n                name: \"C\",\n                value: this.props.pedestrianAmount.adult,\n                itemStyle: {\n                    color: 'rgb(103, 222, 126)'\n                }\n            },\n            {\n                name: \"D\",\n                value: this.props.pedestrianAmount.oldPeople,\n                itemStyle: {\n                    color: 'rgb(64, 157, 247)'\n                }\n            },\n        ].sort(function (a, b) {\n            return a.value > b.value\n        });\n\n        let label = [\"小孩 🧒\", \"青年 👱\", \"成人 🧑\", \"老人 👴\"]\n\n        let option = {\n            backgroundColor: 'transparent',\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                data: label,\n                icon: 'circle',\n                textStyle: {\n                    color: 'rgba(255, 255, 255, 0.8)'\n                }\n            },\n            color: [\n                'rgb(239, 139, 52)',\n                'rgb(246, 197, 69)',\n                'rgb(103, 222, 126)',\n                'rgb(64, 157, 247)',\n            ],\n            polar: {},\n            angleAxis: {\n                show: false,\n                min: 0,\n                max: maxValue,\n                clockwise: false\n            },\n            radiusAxis: {\n                type: 'category',\n                axisLabel: {\n                    interval: 0,\n                    color: 'rgba(255, 255, 255, 0.7)',\n                    fontSize: 11,\n                    formatter: '{value}',\n                    fontFamily: 'Monaco',\n                    align: 'left',\n                    margin: -10\n                },\n                axisLine: {\n                    show: false\n                },\n                axisTick: {\n                    show: false,\n                    alignWithLabel: true,\n                },\n                splitLine: {\n                    show: false\n                },\n                data: data.map(function (item) {\n                    return item.value\n                }),\n            },\n            series: [\n                {\n                    name: label[0],\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    data: [data[0], 0, 0, 0],\n                    zlevel: 10,\n                    roundCap: true\n                },\n                {\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    color: 'rgba(255, 255, 255, 0.05)',\n                    data: [maxValue * 0.75, 0, 0, 0],\n                    barGap: \"-100%\",\n                    zlevel: -10,\n                    roundCap: true\n                },\n                {\n                    name: label[1],\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    data: [0, data[1], 0, 0],\n                    zlevel: 10,\n                    roundCap: true\n                },\n                {\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    color: 'rgba(255, 255, 255, 0.05)',\n                    data: [0, maxValue * 0.75, 0, 0],\n                    barGap: \"-100%\",\n                    zlevel: -10,\n                    roundCap: true\n                },\n                {\n                    name: label[2],\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    data: [0, 0, data[2], 0],\n                    zlevel: 10,\n                    roundCap: true\n                },\n                {\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    color: 'rgba(255, 255, 255, 0.05)',\n                    data: [0, 0, maxValue * 0.75, 0],\n                    barGap: \"-100%\",\n                    zlevel: -10,\n                    roundCap: true\n                },\n                {\n                    name: label[3],\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    data: [0, 0, 0, data[3]],\n                    zlevel: 10,\n                    roundCap: true\n                },\n                {\n                    type: 'bar',\n                    coordinateSystem: 'polar',\n                    color: 'rgba(255, 255, 255, 0.05)',\n                    data: [0, 0, 0, maxValue * 0.75],\n                    barGap: \"-100%\",\n                    zlevel: -10,\n                    roundCap: true\n                },\n            ]\n        };\n\n        return (\n            <div>\n                <SubTitle titleName={\"行人检测\"}/>\n                <ReactEcharts\n                    option={option}\n                    style={{\n                        width: 290,\n                        height: 190\n                    }}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default CountNumber","import * as React from \"react\";\nimport SubTitle from \"../SubTitle\";\nimport * as echarts from 'echarts';\nimport ReactEcharts from \"echarts-for-react\";\n\nclass VehicleLineBar extends React.Component {\n\n    render() {\n        const label = [\n            '自行车 🚴',\n            '小轿车 🚗',\n            '摩托车 🏍️',\n            '巴士 🚌',\n            '卡车 🚛'\n        ]\n\n        let option = {\n            grid: {\n                top: '20%',\n                left: '30%',\n                bottom: '20%'\n            },\n            yAxis: {\n                type: 'category',\n                axisLabel: {\n                    color: 'rgba(255, 255, 255, 0.7)',\n                    fontFamily: 'Monaco'\n                },\n                data: label,\n            },\n            xAxis: {\n                type: 'value',\n                min: 0,\n                max: 10,\n                axisLine: {\n                    show: false\n                },\n                axisTick: {\n                    show: false,\n                    alignWithLabel: true,\n                },\n                splitLine: {\n                    show: false\n                },\n            },\n            series: [\n                {\n                    name: label[0],\n                    data: [\n                        // this.props.vehicleAmount.trunk,\n                        // this.props.vehicleAmount.bus,\n                        // this.props.vehicleAmount.motorcycle,\n                        // this.props.vehicleAmount.car,\n                        // this.props.vehicleAmount.bicycle\n                        1, 2, 3, 4, 5\n                    ],\n                    type: 'bar',\n                    showBackground: true,\n                    backgroundStyle: {\n                        color: 'rgba(220,220,220,0.05)'\n                    },\n                    barCategoryGap: 7,\n                    itemStyle: {\n                        emphasis: {\n                            barBorderRadius: 7\n                        },\n                        normal: {\n                            barBorderRadius: 7,\n                            color: new echarts.graphic.LinearGradient(\n                                0, 1, 0, 0, //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位. 而0 1 0 0则代表渐变色从正下方开始\n                                [\n                                    {offset: 0, color: '#f87d12'},\n                                    {offset: 0.5, color: '#f6860f'},\n                                    {offset: 1, color: '#f8a30f'}\n                                ] //数组, 用于配置颜色的渐变过程. 每一项为一个对象, 包含offset和color两个参数. offset的范围是0 ~ 1, 用于表示柱状图的位置\n                            )\n\n                        }\n                    }\n                },\n            ]\n        };\n\n\n        return (\n            <div>\n                <SubTitle titleName={\"机车检测\"}/>\n                <ReactEcharts\n                    option={option}\n                    style={{\n                        width: 290,\n                        height: 180\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default VehicleLineBar","import * as React from \"react\";\nimport SubTitle from \"../SubTitle\";\nimport * as echarts from 'echarts';\nimport ReactEcharts from \"echarts-for-react\";\n\nclass FunnelSummary extends React.Component {\n\n    render() {\n\n        let data = [\n            {\n                value: 15,\n                name: '行人 ' + this.props.pedestrianAmount,\n                itemStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(\n                            0, 1, 0, 0, //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位. 而0 1 0 0则代表渐变色从正下方开始\n                            [\n                                {offset: 0, color: 'rgb(85,87,145)'},\n                                {offset: 0.5, color: 'rgb(74,86,140)'},\n                                {offset: 1, color: 'rgb(67,79,138)'},\n                            ] //数组, 用于配置颜色的渐变过程. 每一项为一个对象, 包含offset和color两个参数. offset的范围是0 ~ 1, 用于表示柱状图的位置\n                        )\n                    }\n                },\n            },\n            {\n                value: 8,\n                name: '车辆 ' + this.props.pedestrianAmount,\n                itemStyle: {\n                    normal: {\n                        color: new echarts.graphic.LinearGradient(\n                            0, 1, 0, 0, //4个参数用于配置渐变色的起止位置, 这4个参数依次对应右/下/左/上四个方位. 而0 1 0 0则代表渐变色从正下方开始\n                            [\n                                {offset: 0, color: 'rgb(101, 102, 147)'},\n                                {offset: 0.5, color: 'rgb(86,87,141)'},\n                                {offset: 1, color: 'rgb(84,83,145)'},\n                            ] //数组, 用于配置颜色的渐变过程. 每一项为一个对象, 包含offset和color两个参数. offset的范围是0 ~ 1, 用于表示柱状图的位置\n                        )\n                    }\n                }\n            },\n            {\n                value: -1,\n                name: '隐藏',\n                itemStyle: {\n                    opacity: 0\n                },\n                label: {\n                    show: false\n                },\n                tooltip: {\n                    show: false\n                }\n            },\n        ]\n\n        let option = {\n            series: [\n                {\n                    type: 'funnel',\n                    minSize: '0%',\n                    maxSize: '130%',\n                    top: 10,\n                    bottom: -40,\n                    sort: 'descending',\n                    gap: 10,\n                    min: -20,\n                    max: 15,\n                    label: {\n                        show: true,\n                        position: 'inside',\n                        textStyle: {\n                            fontFamily: \"Monaco\",\n                            borderWidth: 0,\n                            color: 'white'\n                        }\n                    },\n                    emphasis: {\n                        label: {\n                            fontSize: 20\n                        }\n                    },\n                    itemStyle: {\n                        normal: {\n                            borderWidth: 0\n                        }\n                    },\n                    data: data\n                }\n            ]\n        };\n\n        return (\n            <div>\n                <SubTitle titleName={\"实时流量\"}/>\n                <ReactEcharts\n                    option={option}\n                    style={{\n                        width: 290,\n                        height: 100\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default FunnelSummary\n","import * as React from \"react\";\nimport SubTitle from \"../SubTitle\";\nimport * as echarts from 'echarts';\nimport ReactEcharts from \"echarts-for-react\";\n\nfunction CountNumberCalendar() {\n    function getVirtulData(year) {\n        year = year || '2020';\n        var date = +echarts.number.parseDate(year + '-01-01');\n        var end = +echarts.number.parseDate(year + '-09-12');\n        var dayTime = 3600 * 24 * 1000;\n        var data = [];\n        for (var time = date; time < end; time += dayTime) {\n            data.push([\n                echarts.format.formatTime('yyyy-MM-dd', time),\n                Math.floor(Math.random() * 10000)\n            ]);\n        }\n        return data;\n    }\n\n    var data = getVirtulData();\n\n    let option = {\n        gird: {\n            top: '10%',\n            left: '50%'\n        },\n        calendar: [\n            {\n                left: 'center',\n                top: 'center',\n                range: ['2020-07-01', '2020-10-30'],\n                splitLine: {\n                    show: true,\n                    lineStyle: {\n                        color: '#000',\n                        width: 4,\n                        type: 'solid'\n                    }\n                },\n                itemStyle: {\n                    color: '#323c48',\n                    borderWidth: 1,\n                    borderColor: '#111'\n                },\n                dayLabel: {\n                    color: 'rgba(255, 255, 255, 0.8)'\n                },\n                monthLabel: {\n                    color: 'rgba(255, 255, 255, 0.8)'\n                },\n                yearLabel: {\n                    show: false\n                }\n            },\n        ],\n        series: [\n            {\n                name: '步数',\n                type: 'scatter',\n                coordinateSystem: 'calendar',\n                data: data,\n                symbolSize: function (val) {\n                    return val[1] / 500;\n                },\n                itemStyle: {\n                    color: '#ddb926'\n                }\n            }\n        ]\n    };\n\n    return (\n        <div>\n            <SubTitle titleName={\"每日流量\"}/>\n            <ReactEcharts\n                option={option}\n                style={{\n                    width: 430,\n                    height: 220\n                }}\n            />\n        </div>\n    )\n}\n\nexport default CountNumberCalendar","import * as React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nclass LineSummary extends React.Component {\n\n    render() {\n        let color = [\n            \"#435086\",\n            \"#7d7d8a\",\n            \"#FFC005\",\n            \"#FF515A\",\n            \"#8B5CFF\",\n            \"#00CA69\"\n        ];\n        let echartData = [\n            {\n                name: \"1\",\n                value1: 100,\n                value2: 233\n            },\n            {\n                name: \"2\",\n                value1: 138,\n                value2: 233\n            },\n            {\n                name: \"3\",\n                value1: 350,\n                value2: 200\n            },\n            {\n                name: \"4\",\n                value1: 173,\n                value2: 180\n            },\n            {\n                name: \"5\",\n                value1: 180,\n                value2: 199\n            },\n            {\n                name: \"6\",\n                value1: 150,\n                value2: 233\n            },\n            {\n                name: \"7\",\n                value1: 180,\n                value2: 210\n            },\n            {\n                name: \"8\",\n                value1: 230,\n                value2: 180\n            }\n        ];\n\n        let xAxisData = echartData.map(v => v.name);\n\n        let yAxisData1 = [...this.props.pedestrianAmountList] //this.props.pedestrianAmountList// echartData.map(v => v.value1);\n        let yAxisData2 = [1, 1, 1, 1, 1, 1, 1, 1] // this.props.vehicleAmountList// echartData.map(v => v.value2);\n        const hexToRgba = (hex, opacity) => {\n            let rgbaColor = \"\";\n            let reg = /^#[\\da-f]{6}$/i;\n            if (reg.test(hex)) {\n                rgbaColor = `rgba(${parseInt(\"0x\" + hex.slice(1, 3))},${parseInt(\n                    \"0x\" + hex.slice(3, 5)\n                )},${parseInt(\"0x\" + hex.slice(5, 7))},${opacity})`;\n            }\n            return rgbaColor;\n        }\n\n        let option = {\n            color: color,\n            grid: {\n                top: 10,\n                // containLabel: true\n                bottom: 10\n            },\n            xAxis: [{\n                type: \"category\",\n                boundaryGap: false,\n                axisLabel: {\n                    formatter: '{value}月',\n                    textStyle: {\n                        color: \"#333\"\n                    }\n                },\n                axisLine: {\n                    show: false\n                },\n                data: xAxisData,\n                axisTick: {\n                    show: false\n                }\n            }],\n            yAxis: [{\n                type: \"value\",\n                axisLabel: {},\n                max: 10,\n                nameTextStyle: {\n                    color: \"#666\",\n                    fontSize: 12,\n                    lineHeight: 40\n                },\n                splitLine: {\n                    show: false\n                },\n                axisLine: {\n                    show: false\n                },\n                axisTick: {\n                    show: false\n                }\n            }],\n            series: [{\n                name: \"2018\",\n                type: \"line\",\n                smooth: true,\n                // showSymbol: false,/\n                symbolSize: 8,\n                zlevel: 3,\n                lineStyle: {\n                    normal: {\n                        color: color[0],\n                        shadowBlur: 3,\n                        shadowColor: hexToRgba(color[0], 0.5),\n                        shadowOffsetY: 8\n                    }\n                },\n                data: yAxisData1\n            }, {\n                name: \"2019\",\n                type: \"line\",\n                smooth: true,\n                symbolSize: 8,\n                zlevel: 3,\n                lineStyle: {\n                    normal: {\n                        color: color[1],\n                        shadowBlur: 3,\n                        shadowColor: hexToRgba(color[1], 0.5),\n                        shadowOffsetY: 8\n                    }\n                },\n                data: yAxisData2\n            }]\n        };\n\n        console.log(option)\n        return (\n            <div>\n                <ReactEcharts\n                    option={option}\n                    style={{\n                        width: 290,\n                        height: 140\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default LineSummary","import * as React from \"react\";\nimport './info.css'\n\nclass Info extends React.Component {\n    render() {\n        return (\n            <p className={'attr'}>\n                <span className={'k'}>{this.props.k}</span>\n                <span>:&nbsp;</span>\n                <span className={'v'}>{this.props.v}</span>\n            </p>\n        )\n    }\n}\n\nexport default Info","import * as React from \"react\";\nimport {BorderBox12} from \"@jiaminghi/data-view-react\";\nimport {Row, Col, Avatar} from \"antd\";\nimport './info.css'\nimport Info from \"./info\";\nimport {UserOutlined} from '@ant-design/icons';\n\nclass PersonCard extends React.Component {\n\n    render() {\n\n        let fourBlockRow;\n        if (this.props.pedestrianAttribute) {\n            fourBlockRow =\n                <Row align={'middle'} justify={'center'}>\n                    <Col span={7} offset={2}>\n                        <Avatar\n                            src={\"data:image/png;base64,\" + this.props.pedestrianAttribute.img}\n                            size={70}\n                        />\n                    </Col>\n                    <Col span={7} offset={1}>\n                        <Info k='年龄' v={this.props.pedestrianAttribute[\"age\"]}/>\n                        <Info k='性别' v={this.props.pedestrianAttribute[\"gender\"]}/>\n                        <Info k='头发' v={this.props.pedestrianAttribute[\"hair length\"]}/>\n                        <Info k='帽子' v={this.props.pedestrianAttribute[\"wearing hat\"]}/>\n                    </Col>\n                    <Col span={7}>\n                        <Info k='上装' v={this.props.pedestrianAttribute[\"color of upper-body clothing\"]}/>\n                        <Info k='下装' v={this.props.pedestrianAttribute[\"color of lower-body clothing\"]}/>\n                        <Info k='背包' v={this.props.pedestrianAttribute[\"carrying bag\"]}/>\n                        <Info k='手提包' v={this.props.pedestrianAttribute[\"carrying handbag\"]}/>\n                    </Col>\n                </Row>\n        } else {\n            // 空值渲染\n            fourBlockRow =\n                <Row align={'middle'} justify={'center'}>\n                    <Col span={7} offset={2}>\n                        <Avatar\n                            // src={require(\"../../image/person.png\")}\n                            icon={<UserOutlined/>}\n                            size={70}\n                        />\n                    </Col>\n                    <Col span={7} offset={1}>\n                        <Info k='年龄' v=''/>\n                        <Info k='性别' v=''/>\n                        <Info k='头发' v=''/>\n                        <Info k='帽子' v=''/>\n                    </Col>\n                    <Col span={7}>\n                        <Info k='上装' v=''/>\n                        <Info k='下装' v=''/>\n                        <Info k='背包' v=''/>\n                        <Info k='手提包' v=''/>\n                    </Col>\n                </Row>\n        }\n\n        return (\n            <Col span={6}>\n                <BorderBox12\n                    color={['rgba(45, 68, 84, 0.8)', 'rgba(45, 68, 84, 0.8)']}\n                    backgroundColor={'rgba(45, 68, 84, 0.01)'}\n                >\n                    <div\n                        style={{\n                            display: \"inline-block\",\n                            verticalAlign: \"top\",\n                            height: 122,\n                            width: 270,\n                            padding: \"18px 0\"\n                        }}\n                    >\n                        {fourBlockRow}\n                    </div>\n                </BorderBox12>\n            </Col>\n        )\n    }\n\n}\n\nexport default PersonCard","import React from 'react';\nimport './App.css';\nimport FullScreenContainer from \"@jiaminghi/data-view-react/es/fullScreenContainer\";\nimport Header from \"./components/Header\";\nimport Video from \"./components/Video\";\nimport MapScene from \"./components/Map\";\nimport CountNumber from \"./components/Chart/CountNumber\"\nimport ReactParticleLine from 'react-particle-line';\nimport VehicleLineBar from \"./components/Chart/VehicleLineBar\";\nimport FunnelSummary from \"./components/Chart/FunnelSummary\";\nimport CountNumberCalendar from \"./components/Chart/CountNumberCalendar\";\nimport LineSummary from \"./components/Chart/LineSummary\";\nimport PersonCard from \"./components/Card\";\nimport {Row} from \"antd\";\nimport 'antd/dist/antd.css';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            personList: [],\n            pedestrianAmount: {\n                child: 0,\n                teenager: 0,\n                adult: 0,\n                oldPeople: 0\n            },\n            vehicleAmount: {\n                trunk: 0,\n                bus: 0,\n                motorcycle: 0,\n                car: 0,\n                bicycle: 0\n            },\n            pedestrianAmountList: [0, 0, 0, 0, 0, 0, 0, 0],\n            vehicleAmountList: [0, 0, 0, 0, 0, 0, 0, 0]\n        }\n    }\n\n    componentDidMount() {\n        setInterval(() => this.getBoxData(), 5000)\n    }\n\n    countNumber(resultList, key, value) {\n        let cnt = 0\n        for (let i = 0; i < resultList.length; ++i) {\n            if (resultList[i] && key in resultList[i] && resultList[i][key] === value) cnt++\n        }\n        return cnt\n    }\n\n    sumNumber(resultMap) {\n        let sum = 0;\n        for (let key in resultMap) sum += resultMap[key]\n        return sum;\n    }\n\n    pushNumber(_list, _item) {\n        _list.shift()\n        _list.push(_item)\n        return _list\n    }\n\n    getBoxData() {\n        let requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n        };\n\n        fetch(\"/box\", requestOptions)\n            .then(response => response.text())\n            .then(result => JSON.parse(result))\n            .then(result => {\n                while ((8 - result.length) > 0) result.push(undefined)\n                this.setState({\n                    personList: result,\n                    pedestrianAmount: {\n                        child: this.countNumber(result, \"age\", \"小孩\"),\n                        teenager: this.countNumber(result, \"age\", \"青年\"),\n                        adult: this.countNumber(result, \"age\", \"成人\"),\n                        oldPeople: this.countNumber(result, \"age\", \"老人\")\n                    },\n                    vehicleAmount: {\n                        trunk: 0,\n                        bus: 0,\n                        motorcycle: 0,\n                        car: 0,\n                        bicycle: 0\n                    }\n                })\n\n                let tempList = this.pushNumber(this.state.pedestrianAmountList, this.sumNumber(this.state.pedestrianAmount))\n                console.log(tempList)\n                this.setState({\n                    pedestrianAmountList: tempList\n                })\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    render() {\n        return (\n            <div>\n                <FullScreenContainer>\n                    <ReactParticleLine\n                        lineWidth={0.1}\n                        dotsNumber={50}\n                        dotsDistance={100}\n                        hoverEffect={false}\n                    >\n                        <div className=\"parent\">\n                            <div className=\"div1\">\n                                <Header/>\n                            </div>\n                            <div className=\"div2 div-grid\">\n                                <div style={{\n                                    marginTop: \"10%\"\n                                }}>\n                                    <Video/>\n                                </div>\n                            </div>\n                            <div className=\"div3 div-grid\">\n                                <CountNumber pedestrianAmount={this.state.pedestrianAmount}/>\n                                <VehicleLineBar vehicleAmount={this.state.vehicleAmount}/>\n                            </div>\n                            <div className=\"div4 div-grid\">\n                                <MapScene/>\n                                <CountNumberCalendar/>\n                            </div>\n                            <div className=\"div5 div-grid\">\n                                <div\n                                    style={{\n                                        marginTop: 10\n                                    }}\n                                >\n                                    <Row justify={'center'} align={'middle'}>\n                                        {\n                                            this.state.personList\n                                                .slice(0, 4)\n                                                .map(person => <PersonCard pedestrianAttribute={person}/>)\n                                        }\n                                    </Row>\n                                    <div style={{height: 10}}/>\n                                    <Row justify={'center'} align={'middle'}>\n                                        {\n                                            this.state.personList\n                                                .slice(4, 8)\n                                                .map(person => <PersonCard pedestrianAttribute={person}/>)\n                                        }\n                                    </Row>\n                                </div>\n                            </div>\n                            <div className=\"div6 div-grid\">\n                                <FunnelSummary\n                                    pedestrianAmount={this.state.pedestrianAmountList[this.state.pedestrianAmountList.length - 1]}/>\n                                <LineSummary\n                                    pedestrianAmountList={this.state.pedestrianAmountList}\n                                    vehicleAmountList={this.state.vehicleAmountList}\n                                />\n                            </div>\n                        </div>\n                    </ReactParticleLine>\n                </FullScreenContainer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}